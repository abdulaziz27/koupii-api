# Nginx Server Block for Koupii API
# Place this file at /etc/nginx/sites-available/koupii-api
# Then create a symlink: sudo ln -s /etc/nginx/sites-available/koupii-api /etc/nginx/sites-enabled/
# Test configuration: sudo nginx -t
# Reload Nginx: sudo systemctl reload nginx

server {
    listen 80;
    listen [::]:80;
    server_name api-koupii.magercoding.com;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; media-src 'self'; object-src 'none'; child-src 'none'; frame-src 'none'; worker-src 'none'; frame-ancestors 'none'; form-action 'self'; base-uri 'self';" always;

    # Remove server signature
    server_tokens off;

    # Client settings
    client_max_body_size 20M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    client_body_timeout 30s;
    client_header_timeout 30s;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/m;

    # Logging
    access_log /var/log/nginx/koupii-api.access.log combined;
    error_log /var/log/nginx/koupii-api.error.log warn;

    # Main API location
    location / {
        # Rate limiting
        limit_req zone=api_limit burst=20 nodelay;

        # Proxy settings
        proxy_pass http://127.0.0.1:8081;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Proxy timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Proxy buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;

        # Cache control
        proxy_cache_bypass $http_upgrade;

        # Don't cache API responses by default
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # Authentication endpoints with stricter rate limiting
    location ~ ^/api/auth/(login|register) {
        limit_req zone=auth_limit burst=3 nodelay;

        proxy_pass http://127.0.0.1:8081;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Health check endpoint
    location /api/health {
        proxy_pass http://127.0.0.1:8081;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        # Allow health checks to be cached briefly
        proxy_cache_valid 200 30s;
        add_header Cache-Control "public, max-age=30" always;

        # Internal health check access
        access_log off;
    }

    # Static assets with caching (if served through API)
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|tar|gz)$ {
        proxy_pass http://127.0.0.1:8081;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Cache static assets
        expires 1y;
        add_header Cache-Control "public, immutable" always;
        add_header Vary "Accept-Encoding" always;

        # Optional: serve directly if files exist locally
        # try_files $uri @proxy;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    location ~ \.(env|log|ini)$ {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    # Block common exploit attempts
    location ~* (wp-admin|wp-login|phpmyadmin|admin|administrator) {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    # Robots.txt
    location = /robots.txt {
        proxy_pass http://127.0.0.1:8081;
        proxy_cache_valid 200 1d;
        add_header Cache-Control "public, max-age=86400" always;
    }

    # Favicon
    location = /favicon.ico {
        proxy_pass http://127.0.0.1:8081;
        proxy_cache_valid 200 1d;
        add_header Cache-Control "public, max-age=86400" always;
        access_log off;
    }
}

# Optional: Redirect www to non-www
server {
    listen 80;
    listen [::]:80;
    server_name www.api-koupii.magercoding.com;
    return 301 $scheme://api-koupii.magercoding.com$request_uri;
}

# Optional: If using Let's Encrypt SSL later (uncomment this and modify as needed)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name api-koupii.magercoding.com;
#
#     # SSL Configuration
#     ssl_certificate /etc/letsencrypt/live/api-koupii.magercoding.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/api-koupii.magercoding.com/privkey.pem;
#     ssl_trusted_certificate /etc/letsencrypt/live/api-koupii.magercoding.com/chain.pem;
#
#     # SSL Settings
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     ssl_session_tickets off;
#     ssl_stapling on;
#     ssl_stapling_verify on;
#
#     # Security headers for HTTPS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
#
#     # Include all the location blocks from the HTTP server block above
#     # ... (copy all location blocks here)
# }
