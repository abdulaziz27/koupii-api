# Production Docker Compose for Koupii API

services:
    db:
        image: mysql:8.0
        container_name: koupii-api-db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpass}
        volumes:
            - ./mysql-data:/var/lib/mysql
        networks:
            - koupii-network
        healthcheck:
            test:
                [
                    "CMD",
                    "mysqladmin",
                    "ping",
                    "-h",
                    "127.0.0.1",
                    "-uroot",
                    "-p${DB_ROOT_PASSWORD:-rootpass}",
                ]
            interval: 10s
            timeout: 5s
            retries: 10
            start_period: 30s

    redis:
        image: redis:7-alpine
        container_name: koupii-api-redis
        restart: unless-stopped
        command: redis-server --appendonly yes
        volumes:
            - ./redis-data:/data
        networks:
            - koupii-network
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s

    app:
        image: ghcr.io/abdulaziz27/koupii-api:${GITHUB_SHA:-latest}
        container_name: koupii-api-app
        restart: unless-stopped
        ports:
            - "127.0.0.1:8081:8080"
        env_file:
            - ./.env
        environment:
            - CONTAINER_ROLE=app
            - FRANKENPHP_WORKERS=4
            - DB_HOST=db
            - REDIS_HOST=redis
            - RUN_MIGRATIONS=true
            - CLEAR_CACHE=true
        volumes:
            - ./storage:/app/storage
            - ./bootstrap-cache:/app/bootstrap/cache
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "curl -f http://localhost:8080/api/health || exit 1",
                ]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 120s
        networks:
            - koupii-network

    queue:
        image: ghcr.io/abdulaziz27/koupii-api:${GITHUB_SHA:-latest}
        container_name: koupii-api-queue
        restart: unless-stopped
        env_file:
            - ./.env
        environment:
            - CONTAINER_ROLE=queue
            - DB_HOST=db
            - REDIS_HOST=redis
        command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
        volumes:
            - ./storage:/app/storage
            - ./bootstrap-cache:/app/bootstrap/cache
        depends_on:
            app:
                condition: service_healthy
        networks:
            - koupii-network

    scheduler:
        image: ghcr.io/abdulaziz27/koupii-api:${GITHUB_SHA:-latest}
        container_name: koupii-api-scheduler
        restart: unless-stopped
        env_file:
            - ./.env
        environment:
            - CONTAINER_ROLE=scheduler
            - DB_HOST=db
            - REDIS_HOST=redis
        command: php artisan schedule:work
        volumes:
            - ./storage:/app/storage
            - ./bootstrap-cache:/app/bootstrap/cache
        depends_on:
            app:
                condition: service_healthy
        networks:
            - koupii-network

networks:
    koupii-network:
        external: true
        name: koupii-network
